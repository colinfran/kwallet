// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              [
                {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View
              collapsable={false}
              pointerEvents="box-none"
              style={
                {
                  "zIndex": 1,
                }
              }
            >
              <View
                accessibilityElementsHidden={false}
                importantForAccessibility="auto"
                onLayout={[Function]}
                pointerEvents="box-none"
                style={null}
              >
                <View
                  collapsable={false}
                  pointerEvents="box-none"
                  style={
                    {
                      "bottom": 0,
                      "left": 0,
                      "opacity": 1,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                      "zIndex": 0,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      {
                        "backgroundColor": "rgb(255, 255, 255)",
                        "borderBottomColor": "rgb(216, 216, 216)",
                        "flex": 1,
                        "shadowColor": "rgb(216, 216, 216)",
                        "shadowOffset": {
                          "height": 0.5,
                          "width": 0,
                        },
                        "shadowOpacity": 0.85,
                        "shadowRadius": 0,
                      }
                    }
                  />
                </View>
                <View
                  collapsable={false}
                  pointerEvents="box-none"
                  style={
                    {
                      "height": 44,
                      "maxHeight": undefined,
                      "minHeight": undefined,
                      "opacity": undefined,
                      "transform": undefined,
                    }
                  }
                >
                  <View
                    pointerEvents="none"
                    style={
                      {
                        "height": 0,
                      }
                    }
                  />
                  <View
                    pointerEvents="box-none"
                    style={
                      {
                        "alignItems": "stretch",
                        "flex": 1,
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={
                        {
                          "alignItems": "flex-start",
                          "flexBasis": 0,
                          "flexGrow": 1,
                          "justifyContent": "center",
                          "marginStart": 0,
                          "opacity": 1,
                        }
                      }
                    />
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={
                        {
                          "justifyContent": "center",
                          "marginHorizontal": 16,
                          "maxWidth": 718,
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        accessibilityRole="header"
                        aria-level="1"
                        collapsable={false}
                        numberOfLines={1}
                        onLayout={[Function]}
                        style={
                          {
                            "color": "rgb(28, 28, 30)",
                            "fontSize": 17,
                            "fontWeight": "600",
                          }
                        }
                      />
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={
                        {
                          "alignItems": "flex-end",
                          "flexBasis": 0,
                          "flexGrow": 1,
                          "justifyContent": "center",
                          "marginEnd": 0,
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
            <RNSScreenContainer
              onLayout={[Function]}
              style={
                {
                  "flex": 1,
                }
              }
            >
              <RNSScreen
                activityState={2}
                collapsable={false}
                forwardedRef={[Function]}
                gestureResponseDistance={
                  {
                    "bottom": -1,
                    "end": -1,
                    "start": -1,
                    "top": -1,
                  }
                }
                pointerEvents="box-none"
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                />
                <View
                  accessibilityElementsHidden={false}
                  closing={false}
                  gestureVelocityImpact={0.3}
                  importantForAccessibility="auto"
                  onClose={[Function]}
                  onGestureBegin={[Function]}
                  onGestureCanceled={[Function]}
                  onGestureEnd={[Function]}
                  onOpen={[Function]}
                  onTransition={[Function]}
                  pointerEvents="box-none"
                  style={
                    [
                      {
                        "display": "flex",
                        "overflow": undefined,
                      },
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                    ]
                  }
                  transitionSpec={
                    {
                      "close": {
                        "animation": "spring",
                        "config": {
                          "damping": 500,
                          "mass": 3,
                          "overshootClamping": true,
                          "restDisplacementThreshold": 10,
                          "restSpeedThreshold": 10,
                          "stiffness": 1000,
                        },
                      },
                      "open": {
                        "animation": "spring",
                        "config": {
                          "damping": 500,
                          "mass": 3,
                          "overshootClamping": true,
                          "restDisplacementThreshold": 10,
                          "restSpeedThreshold": 10,
                          "stiffness": 1000,
                        },
                      },
                    }
                  }
                >
                  <View
                    collapsable={false}
                    pointerEvents="box-none"
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      forwardedRef={[Function]}
                      handlerTag={1}
                      handlerType="PanGestureHandler"
                      needsOffscreenAlphaCompositing={false}
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      style={
                        {
                          "flex": 1,
                          "transform": [
                            {
                              "translateX": 0,
                            },
                            {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        pointerEvents="box-none"
                        style={
                          [
                            {
                              "flex": 1,
                              "overflow": "hidden",
                            },
                            [
                              {
                                "backgroundColor": "rgb(242, 242, 242)",
                              },
                              undefined,
                            ],
                          ]
                        }
                      >
                        <View
                          style={
                            {
                              "flex": 1,
                              "flexDirection": "column-reverse",
                            }
                          }
                        >
                          <View
                            style={
                              {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "alignItems": "center",
                                  "gap": 40,
                                  "height": "100%",
                                  "justifyContent": "center",
                                  "padding": 20,
                                  "width": "100%",
                                }
                              }
                            >
                              <View
                                style={
                                  {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                    "position": "relative",
                                    "width": "100%",
                                  }
                                }
                              >
                                <View>
                                  <Image
                                    accessibilityLabel="Kwallet logo"
                                    alt="Kwallet logo"
                                    dataSet={{}}
                                    onError={[Function]}
                                    resizeMode="contain"
                                    source="/assets/images/kwallet-icon-logo.png"
                                    style={
                                      [
                                        {
                                          "maxWidth": "100%",
                                        },
                                        {
                                          "height": 300,
                                          "width": 300,
                                        },
                                      ]
                                    }
                                  />
                                </View>
                                <View
                                  style={
                                    {
                                      "alignItems": "center",
                                      "justifyContent": "center",
                                      "marginTop": 20,
                                    }
                                  }
                                >
                                  <Text
                                    style={
                                      {
                                        "color": "#000",
                                        "fontSize": 50,
                                      }
                                    }
                                    testID="test-kwallet"
                                  >
                                    kwallet
                                  </Text>
                                </View>
                              </View>
                              <View
                                style={
                                  {
                                    "width": "100%",
                                  }
                                }
                              >
                                <View
                                  style={
                                    {
                                      "paddingBottom": 40,
                                    }
                                  }
                                >
                                  <View
                                    accessibilityRole="button"
                                    accessibilityState={
                                      {
                                        "busy": undefined,
                                        "checked": undefined,
                                        "disabled": undefined,
                                        "expanded": undefined,
                                        "selected": undefined,
                                      }
                                    }
                                    accessibilityValue={
                                      {
                                        "max": undefined,
                                        "min": undefined,
                                        "now": undefined,
                                        "text": undefined,
                                      }
                                    }
                                    accessible={true}
                                    collapsable={false}
                                    colorScheme="primary"
                                    dataSet={{}}
                                    focusable={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      {
                                        "alignItems": "center",
                                        "borderColor": "#7fdccc",
                                        "borderRadius": 15,
                                        "borderWidth": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "paddingBottom": 12,
                                        "paddingLeft": 12,
                                        "paddingRight": 12,
                                        "paddingTop": 12,
                                      }
                                    }
                                    testID="test-button"
                                  >
                                    <View
                                      dataSet={{}}
                                      style={
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        }
                                      }
                                      test={true}
                                    >
                                      <View
                                        dataSet={{}}
                                        style={{}}
                                      >
                                        <Text
                                          dataSet={{}}
                                          style={
                                            [
                                              {
                                                "backgroundColor": undefined,
                                                "color": "#66B0A3",
                                                "fontFamily": undefined,
                                                "fontSize": 16,
                                                "fontStyle": "normal",
                                                "fontWeight": "400",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                                "textDecorationLine": undefined,
                                              },
                                              {
                                                "color": "#000",
                                              },
                                            ]
                                          }
                                        >
                                          Import Existing Wallet
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                                <View
                                  style={
                                    {
                                      "paddingBottom": 40,
                                    }
                                  }
                                >
                                  <View
                                    accessibilityRole="button"
                                    accessibilityState={
                                      {
                                        "busy": undefined,
                                        "checked": undefined,
                                        "disabled": undefined,
                                        "expanded": undefined,
                                        "selected": undefined,
                                      }
                                    }
                                    accessibilityValue={
                                      {
                                        "max": undefined,
                                        "min": undefined,
                                        "now": undefined,
                                        "text": undefined,
                                      }
                                    }
                                    accessible={true}
                                    collapsable={false}
                                    colorScheme="primary"
                                    dataSet={{}}
                                    focusable={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onResponderGrant={[Function]}
                                    onResponderMove={[Function]}
                                    onResponderRelease={[Function]}
                                    onResponderTerminate={[Function]}
                                    onResponderTerminationRequest={[Function]}
                                    onStartShouldSetResponder={[Function]}
                                    style={
                                      {
                                        "alignItems": "center",
                                        "borderColor": "#7fdccc",
                                        "borderRadius": 15,
                                        "borderWidth": 1,
                                        "flexDirection": "row",
                                        "justifyContent": "center",
                                        "paddingBottom": 12,
                                        "paddingLeft": 12,
                                        "paddingRight": 12,
                                        "paddingTop": 12,
                                      }
                                    }
                                    testID="test-button"
                                  >
                                    <View
                                      dataSet={{}}
                                      style={
                                        {
                                          "alignItems": "center",
                                          "flexDirection": "row",
                                        }
                                      }
                                      test={true}
                                    >
                                      <View
                                        dataSet={{}}
                                        style={{}}
                                      >
                                        <Text
                                          dataSet={{}}
                                          style={
                                            [
                                              {
                                                "backgroundColor": undefined,
                                                "color": "#66B0A3",
                                                "fontFamily": undefined,
                                                "fontSize": 16,
                                                "fontStyle": "normal",
                                                "fontWeight": "400",
                                                "letterSpacing": 0,
                                                "lineHeight": 24,
                                                "textDecorationLine": undefined,
                                              },
                                              {
                                                "color": "#000",
                                              },
                                            ]
                                          }
                                        >
                                          Create New Wallet
                                        </Text>
                                      </View>
                                    </View>
                                  </View>
                                </View>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </RNSScreen>
            </RNSScreenContainer>
          </View>
        </View>
      </View>
    </RNCSafeAreaProvider>
  </RNCSafeAreaProvider>
</RNCSafeAreaProvider>
`;
